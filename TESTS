#!./hc
\p 16
test(msg, con) = if(con!=1,print("Error :",msg))

print("WELCOME TO HC AUTOMATED TESTING")
test("1+1 is 2",1+1==2)
test("mmass('H2O')",mmass("H2O")==18.01528)
test("nCr",nCr(50,5)==2118760)
test("totient of prime number",totient(101)==100)

s = 0
for(j=0, j<1000, j+=1, if(j%3 == 0 | j%5 == 0, s+=j))
test("Project Euler's P1",s == 233168)

s = 0
x = 0
j = 1
while(x <= 4000000, x = fibo(j); if(x%2 == 0, s+=x); j+=1)
test("Project Euler's P2",s == 4613732)
test("if",if(1==2,"hello","hi")=="hi")
test("precision error fixing test",(1/3)/3 == (1/3)^2)
y = [1]
test("join test",join(y,[2])==[1,2])
x = []
test("join test 2",join(x,[pi])==[pi])
myfib(n) = if(n<2,n,myfib(n-1)+myfib(n-2))
test("built-in vs user-defined fibonacci",myfib(10) == fibo(10))
meh = 2
test("multiple level indexing",[1,2,[1,2,["hello",2,3]]][meh][exp(0)+1][0][(1+1)*2]=="o")

fft(x)=for(k=0,k<length(x),k+=1,
  xk = 0;
  for(j=0,j<length(x),j+=1,
    xk+=x[j] * exp(-2pi*k*j*0i1/length(x));
    );
  y=if(k==0,[xk],join(y,[xk]));
  if(k==length(x)-1,y);
  )

mehfoo = [1,0,3i-3,4i5,5]
test("FFT",fft(mehfoo)==[13i2,-7.8203160070896799i3.7250338450183462,6.7264861191111235i2.6059037339171068,-8.4904181416113337i-1.3698357564173172,1.5842480295898901i-6.9611018225181358])
test("indexing tricks",["[","]]["][length("[")][length("][")]=="[")
v = [["[][]]",[1,2]],2,[3,"heike"]]
x = 0
v[0][x][-1+1] = "?"
test("assignment by index", v[0][0][0] == "?")
test("assignment by index 2", v == [["?"+"]"+"[]]",[x^2 + 1,2.5 - 0.5]],2,[3+x,"he"*(x+1)+"ike"]])
test("ones() example", ones(8) * 5 == [5,5,5,5,5,5,5,5])
test("zeros() example", zeros(1) == [0])
test("zeros() example 2", zeros(0) == [])
test("testing some constants", round(pi + e + answer) == 48)
test("1/3/3 == 1/3^2",1/3/3 == 1/3^2)
test("(1/3)/3 == (1/3)^2",(1/3)/3 == (1/3)^2)
test("(1/3)/3 >= (1/3)^2",(1/3)/3 >= (1/3)^2)
test("(1/3)/3 <= (1/3)^2",(1/3)/3 <= (1/3)^2)
test("sort()", sort([3,1,2]) == [1,2^3-6,3])
test("sort() 2", sort([0,0,0,0,-1]) == [-1,0,0,0,0^5])
meh = 0
test("sort() 3", sort([0,0,meh,0,1+4]) == [-1+1,0,0,0,10-5])
list = [meh,1,sqrt(4)]
rcmp(x,y) = if(x<y,1,-1)
test("sort() 4, custom cmp", sort(list,rcmp) == [2,1,0])

# Taylor's request begins below
1+1
/8
test("Taylor's request",ans() == 0.25)

bar = 3
plusthree(foo) = foo + bar
test("map & sort", sort(map(plusthree,[2,1,2^2,2 + .5,-4])) == [-1,4,5,5.5,7])
test("range", range(0) == [])
test("range 2", range(5) == sort([2,1,0,3,4]))
test("range & map & sort", map(plusthree,range(4)) == sort([4,3,6,5]))
test("range & map & fibo & sort", map(fibo,range(1,5)) == sort([1,2,3,1]))
showfibo(n) = map(fibo,range(1,n+1))
test("showfibo", showfibo(10) == [1,1,2,3,5,8,13,21,34,55])

print("END OF TESTING. If no errors were reported, all tests passed successfully.")
